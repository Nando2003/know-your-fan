# Generated by Django 5.2 on 2025-05-05 14:06

import datetime
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ESportsNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('source', models.URLField()),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_at', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('logo', models.ImageField(upload_to='team_logos/')),
                ('x_account', models.URLField()),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='FanProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rt_org_posts', models.BooleanField(default=False)),
                ('liked_org_posts', models.BooleanField(default=False)),
                ('interacted_org_posts', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fan_profiles', to='accounts.userinfo')),
                ('games', models.ManyToManyField(blank=True, help_text='Selecione um ou mais jogos de interesse', related_name='fans', to='dashboard.game')),
                ('org_preference', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fans', to='dashboard.team')),
            ],
            options={
                'verbose_name': 'FanProfile',
                'verbose_name_plural': 'FanProfiles',
            },
        ),
        migrations.CreateModel(
            name='FanEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Data em que o evento ou atividade ocorreu', verbose_name='Data do Evento')),
                ('event_type', models.CharField(choices=[('LAN Party', 'LAN Party'), ('Torneio', 'Torneio'), ('Meetup', 'Meetup'), ('Stream', 'Stream'), ('Viewing Party', 'Viewing Party'), ('Torcida Organizada', 'Torcida Organizada'), ('Workshop', 'Workshop'), ('Lançamento de Jogo', 'Lançamento de Jogo'), ('Torneio Online', 'Torneio Online'), ('Campeonato Internacional', 'Campeonato Internacional')], max_length=30, verbose_name='Tipo de Evento')),
                ('description', models.CharField(help_text='Breve texto sobre o que aconteceu', max_length=255, verbose_name='Descrição')),
                ('fan_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='dashboard.fanprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_status', models.CharField(choices=[('loading', 'Carregando'), ('finished', 'Finalizado')], default='loading', max_length=20)),
                ('news_status', models.CharField(choices=[('loading', 'Carregando'), ('finished', 'Finalizado')], default='loading', max_length=20)),
                ('score', models.IntegerField(default=0)),
                ('news', models.ManyToManyField(related_name='dashboards', to='dashboard.esportsnews')),
                ('fan_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fan_dashboards', to='dashboard.fanprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(help_text='Descrição do produto ou serviço', max_length=150, verbose_name='Item Comprado')),
                ('date', models.DateField(help_text='Data em que a compra foi realizada', verbose_name='Data da Compra')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='Valor gasto (opcional)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor (R$)')),
                ('fan_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='dashboard.fanprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
    ]
